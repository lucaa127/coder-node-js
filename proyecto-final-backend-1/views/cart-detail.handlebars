<section class="p-4" style="border:solid 1px; background-color:rgb(246, 255, 253); width:90%; margin:auto;">

<h4 style="color: darkslategrey; margin-bottom:10px;">Carrito de compras: </h4>

{{#if cartData.products }}

<form id="cartForm">
<section class="row">

    <table class="table">
    <thead>
        <tr>
        <th scope="col">Producto</th>
        <th scope="col">Precio</th>
        <th scope="col">Cant</th>
        <th scope="col">-</th>
        </tr>
    </thead>
    <tbody>

        {{#each cartData.products }}
            <tr id="row-{{this._id._id}}"> 
            <td><a style="color: black;" href="/products/{{this._id._id}}">{{this._id.title}}</a></td>
            <td>${{this._id.price}}</td>
            <td class="p-4 contador-cont d-flex ">

            <button class="btn btn-danger" onclick="dec1(event,'{{this._id._id}}','{{../cid}}')"> - </button>
            <input id="qty{{this._id._id}}" name="{{this._id._id}}" type="number" class="form-control text-right mx-2" style="width: 60px;" value="{{this.qty}}" min="1" max="50" readonly>
            <button class="btn btn-success" onclick="inc1(event,'{{this._id._id}}','{{../cid}}')"> + </button>
            </td>

            <td class="p-4">
                <i  class="bi bi-trash"
                    onclick="return deleteProductFromCart('{{../cid}}', '{{this._id._id}}')"
                    style="color: tomato;
                    font-size:1.1em;
                    font-weight:bolder;"
                ></i>   
            </td>

            </tr>
        {{/each}}

    </tbody>
    </table>


<p class="card-text"> <a href="/products"><i class="bi bi-arrow-left-short"></i> Volver a productos</a> <span class="btn btn-danger" style="margin-left: 14%; margin-top:2px;" onclick="return releaseCart('{{cid}}')"> Vaciar carrito <i class="bi bi-cart-x"></i> </span> </p>

{{else}}
    
    <span class="badge bg-info text-dark p-4 d-flex ms-auto">No hay productos en el carrito de compras..</span><br>
    <p class="card-text"> <a href="/products"><i class="bi bi-arrow-left-short"></i> Ver productos</a></p>
    
{{/if}}


</section>



<script>
async function inc1(event, id, cartId) {

  event.preventDefault();
  const c = document.getElementById(`qty${id}`);
  let value = parseInt(c.value, 10);
  if (value < 50) {
    c.value = value + 1;
       try {
        const response = await fetch(`/api/carts/${cartId}/products/${id}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify( {quantity: c.value})
        });

        if (response.status === 200 || response.status === 201) {
          console.log("Data sent successfully!");
        } else {
          console.error("Error sending data:", response.status);
        }
      } catch (error) {
        console.error("Error:", error);
      }
  }
}

async function dec1(event, id, cartId) {
  event.preventDefault();
  const c = document.getElementById(`qty${id}`);
  let value = parseInt(c.value, 10);
  if (value > 1) {
    c.value = value - 1;

        try {
        const response = await fetch(`/api/carts/${cartId}/products/${id}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify( {quantity: c.value})
        });

        if (response.status === 200 || response.status === 201) {
          console.log("Data sent successfully!");
        } else {
          console.error("Error sending data:", response.status);
        }
      } catch (error) {
        console.error("Error:", error);
      }
  }
}



async function releaseCart(cartId) {
    try {
        const response = await fetch(`/api/carts/${cartId}`, {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify( {cartId: cartId})
        });
          if (response.status === 200 || response.status === 201) {
            console.log("Cart released");
          } else {
            console.error("Error sending data:", response.status);
          }
      } catch (error) {
        console.error("Error:", error);
   }
}



async function deleteProductFromCart(cartId, prodId) {
    try {
        const response = await fetch(`/api/carts/${cartId}/products/${prodId}`, {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify( {cartId: cartId})
        });
          if (response.status === 200 || response.status === 201) {
            console.log("Product deleted");
            document.getElementById(`row-${prodId}`).style.display = 'none';
          } else {
            console.error("Error sending data:", response.status);
          }
      } catch (error) {
        console.error("Error:", error);
   }
}


</script>